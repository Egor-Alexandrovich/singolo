@font-face {
  font-family: 'LatoRegular';
  src: url("./assets/fonts/lato-regular-webfont.woff2") format("woff2"), url("./assets/fonts/lato-regular-webfont.woff") format("woff"), url("./assets/fonts/Lato-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'LatoLight';
  src: url("./assets/fonts/lato-light-webfont.woff2") format("woff2"), url("./assets/fonts/lato-light-webfont.woff") format("woff"), url("./assets/fonts/Lato-Light.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'LatoBlack';
  src: url("./assets/fonts/lato-black-webfont.woff2") format("woff2"), url("./assets/fonts/lato-black-webfont.woff") format("woff"), url("./assets/fonts/Lato-Black.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'LatoBold';
  src: url("./assets/fonts/lato-bold-webfont.woff2") format("woff2"), url("./assets/fonts/lato-bold-webfont.woff") format("woff"), url("./assets/fonts/Lato-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'MyriadPro-Regular';
  src: url("./assets/fonts/myriadpro.ttf") format("truetype"), url("./assets/fonts/myriadpro.woff") format("woff"), url("./assets/fonts/myriadpro.woff2") format("woff2");
  font-weight: normal;
  font-style: normal; }

/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type=search] {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: content-box; }

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none; }

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0; }

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html,
button,
input,
select,
textarea {
  color: #222; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

img {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/*======================  Header =====================*/
.header {
  background-color: #2d303a;
  box-shadow: 0px 7px 0px 0px #323746;
  margin-bottom: 7px; }
  .header__container {
    display: flex;
    padding: 14px 40px;
    color: #ffff;
    font-family: 'LatoBold'; }

.container {
  max-width: 1020px;
  margin: 0 auto;
  box-sizing: border-box; }

.logo {
  position: relative;
  font-size: 25px;
  line-height: 60px;
  height: 60px;
  letter-spacing: -0.8px;
  flex-grow: 4;
  cursor: pointer; }
  .logo a {
    text-decoration: none;
    color: #fff; }
  .logo__dot {
    color: #f06c64;
    position: absolute; }

.navigation {
  flex-grow: 1;
  display: flex;
  justify-content: space-between;
  font-size: 12px;
  text-transform: uppercase;
  height: 60px;
  line-height: 70px; }
  .navigation__item_select {
    color: #f06c64; }
  .navigation__item:hover {
    color: #f06c64;
    cursor: pointer; }

.navigation__item_select ~ .navigation__item {
  position: relative; }
  .navigation__item_select ~ .navigation__item::before {
    content: '';
    display: block;
    position: absolute;
    top: 35px;
    left: -14px;
    width: 3px;
    height: 3px;
    background-color: #323746;
    border-radius: 50% 50%; }

/*======================Media for Header =====================*/
/*====================== Section Slider =====================*/
.slider {
  background-color: #f06c64;
  box-shadow: 0px 7px 0px 0px #ea676b;
  margin-bottom: 7px; }
  .slider__container {
    display: flex;
    padding: 53px 40px 59px 40px; }

.chev {
  line-height: 479px;
  cursor: pointer; }

.chev-right {
  transform: rotate(180deg); }

.iphone-wrapper {
  flex-grow: 1; }

.iphone {
  position: relative;
  width: 215px;
  height: 458px;
  background-color: #f2f2f2;
  border-radius: 28px; }

.vertical {
  margin-left: 56px;
  box-shadow: 25px 25px 0px 0px rgba(0, 0, 0, 0.15); }

.camera {
  position: absolute;
  left: 50%;
  top: 16px;
  transform: translateX(-50%);
  width: 9px;
  height: 9px;
  border-radius: 50% 50%;
  background-color: #d8d8d8;
  display: flex;
  justify-content: center;
  align-items: center; }
  .camera__dot {
    width: 4px;
    height: 4px;
    border-radius: 50% 50%;
    background-color: #eb5055; }

.speaker {
  position: absolute;
  left: 50%;
  top: 36px;
  transform: translateX(-50%);
  width: 36px;
  height: 5px;
  border-radius: 5px;
  background-color: #acacac; }

.screen {
  position: absolute;
  left: 50%;
  bottom: 56px;
  transform: translateX(-50%);
  width: 194px;
  height: 339px;
  box-sizing: border-box;
  border-radius: 3px;
  border: 3px solid #c7c8c7; }

.iphone.vertical > .screen {
  background-image: url("./assets/images/iphone-img-vertical.png");
  background-position: -13px -135px; }

.iphone.horizontal > .screen {
  background-image: url("./assets/images/iphone-img-horizontal.png");
  background-position: -118px -124px; }

.home-button {
  position: absolute;
  left: 50%;
  bottom: 9px;
  transform: translateX(-50%);
  width: 43px;
  height: 43px;
  border-radius: 50% 50%;
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center; }
  .home-button__square {
    width: 17px;
    height: 17px;
    border-radius: 3px;
    border: 2px solid #bababa;
    box-sizing: border-box; }

.horizontal {
  margin-left: 15px;
  transform: rotate(90deg);
  box-shadow: 25px -25px 0px 0px rgba(0, 0, 0, 0.15); }

.services {
  background-color: #f2f2f2;
  box-shadow: 0px 6px 0px 0px white;
  margin-bottom: 6px; }
  .services__container {
    padding: 62px 40px 30px;
    font-family: 'MyriadPro-Regular'; }
  .services__header {
    margin-bottom: 27px;
    font-family: 'LatoBlack';
    font-size: 30px;
    color: #666d89;
    text-transform: capitalize; }
  .services__text {
    padding-bottom: -8px;
    margin-bottom: 47px;
    font-size: 18px;
    line-height: 26px;
    text-align: justify;
    color: #767e9e; }

.wrapper {
  display: flex;
  flex-wrap: wrap; }

.service-description {
  width: 300px;
  margin-right: 20px;
  box-sizing: border-box;
  display: flex;
  align-items: flex-start; }
  .service-description img {
    margin-right: 20px; }
  .service-description__item {
    margin-bottom: 33px; }
  .service-description__heading {
    margin-bottom: 10px;
    font-family: 'MyriadPro-Regular';
    font-size: 18px;
    font-weight: 600;
    line-height: 19px;
    letter-spacing: 0.7px;
    text-transform: capitalize;
    color: #666d89; }
  .service-description__text {
    overflow: hidden;
    text-align: justify;
    font-family: 'MyriadPro-Regular';
    font-size: 12px;
    font-weight: 600;
    line-height: 21px;
    letter-spacing: 0.2px;
    color: #767e9e; }
  .service-description:last-child {
    margin-right: 0; }
  .service-description:nth-child(3) {
    margin-right: 0; }

.Curabitur_vestibulum_eget_mauris_quis_laoreet__ {
  font-size: 12px;
  font-family: "Myriad Pro";
  color: #767e9e;
  line-height: 1.797;
  text-align: justifyLeft;
  position: absolute;
  left: 119.937px;
  top: 967.552px;
  width: 220px;
  height: 54px;
  z-index: 36; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
